name: CI
on:
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"

jobs:
  rustfmt:
    name: Formatter check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true

      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  # Run compile check on Linux, macOS, and Windows
  # On both Rust stable and Rust nightly
  compile:
    name: Compile
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        toolchain: [stable, nightly]
    steps:
      # Checkout the branch being tested
      - uses: actions/checkout@v3

      # Install rust stable
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      # Cache the built dependencies
      - uses: Swatinem/rust-cache@v2.4.0
        with:
          save-if: ${{ github.event_name == 'push' }}

      # Install cargo-hack
      - uses: taiki-e/install-action@cargo-hack

      # Compile all feature combinations on the target platform
      - name: Compile
        run: cargo hack --feature-powerset check

  # Run tests on Linux
  # On both Rust stable and Rust nightly
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly]
    steps:
      # Checkout the branch being tested
      - uses: actions/checkout@v3

      # Install rust stable
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      # Cache the built dependencies
      - uses: Swatinem/rust-cache@v2.4.0
        with:
          save-if: ${{ github.event_name == 'push' }}

      # Install cargo-hack
      - uses: taiki-e/install-action@cargo-hack

      # Run the ignored tests that expect the above setup
      - name: Run all tests
        run: cargo hack --feature-powerset test

  wasm:
    name: WASM build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Install rust stable
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      # Cache the built dependencies
      - uses: Swatinem/rust-cache@v2.4.0
        with:
          save-if: ${{ github.event_name == 'push' }}

      # Build the WASM 
      - name: Build Showcase example
        run: cargo run --package run-wasm -- --bin castle-game --release --build-only

      # Deploy to GitHub pages
      - name: Deploy to GitHub Pages
        uses: s0/git-publish-subdir-action@master
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: target/wasm-examples
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
